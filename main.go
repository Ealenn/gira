package main

import (
	CMD "gira/cmd"
	"gira/configuration"
	Services "gira/services"

	"github.com/spf13/cobra"
)

func main() {
	rootCmd := &cobra.Command{Use: "gira"}

	logger := Services.NewLoggerService(Services.INFO)
	configuration := configuration.New()

	/* ----------------------
	 * Branch
	 * ----------------------
	 */
	var branchCommandAssignIssueFlag bool
	var branchCommand = &cobra.Command{
		Use:   "branch [Jira Issue ID]",
		Short: "Create a new Git branch using Jira issue ID.",
		Long: `
Creates a new Git branch based on Jira issue.
The branch name is generated by combining the Jira issue ID with a slugified version of the issue summary (e.g., "feature/ABC-123/fix-login-bug"). 
This helps enforce consistent naming conventions and improve traceability between code and Jira issues.
		`,
		Args: cobra.MinimumNArgs(1),
		Run: func(cmd *cobra.Command, args []string) {
			CMD.CmdBranch(configuration, logger, args[0], branchCommandAssignIssueFlag)
		},
	}
	branchCommand.Flags().BoolVarP(&branchCommandAssignIssueFlag, "assignIssue", "a", false, "assign the issue to the currently logged-in Jira user after creating the Git branch")
	rootCmd.AddCommand(branchCommand)

	rootCmd.Execute()
}
